[
    {
        "school": "CISC",
        "id": 101,
        "name": "Principles of Computing",
        "desc": "Introduces students to the central ideas of computing and computer science including programs, algorithms, abstraction, the internet, and information systems. Instills ideas and practices of computational thinking and engages students in activities that show how computing and computer science change the world. Explores computing as a creative activity and empowers students to apply computational thinking to all disciplines including the arts, humanities, business, social and physical sciences, health, and entertainment.",
        "preReq": "N/A",
        "coReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 103,
        "name": "Introduction to Computer Science with Web Applications",
        "desc": "Principles of computer science illustrated through programming in scripting languages such as JavaScript and VBScript. Topics include control structures, arrays, functions, and procedures. Programming projects illustrate web-based applications.",
        "preReq": "Open to non-majors",
        "coReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 106,
        "name": "General Computer Science for Engineers",
        "desc": "Principles of computer science illustrated and applied through programming in a general-purpose language. Programming projects illustrate computational problems, styles, and issues that arise in engineering.",
        "preReq": "N/A",
        "coReq": "MATH 241 or any higher level MATH course.",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 108,
        "name": "Introduction to Computer Science I",
        "desc": "Computing and principles of programming with an emphasis on systematic program design. Topics include functional programming, data abstraction, procedural abstraction, use of control and state, recursion, testing, and object-oriented programming concepts. Requires no prior programming experience, open to any major, but intended primarily for majors and minors in computer science or mathematics.",
        "preReq": "N/A",
        "corReq": "MATH 115, MATH 117, or higher math course or math placement.",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 181,
        "name": "Introduction to Computer Science II",
        "desc": "Principles of computer science illustrated and applied through programming in an object oriented language. Programming projects illustrate computational problems, styles and issues that arise in computer systems development and in all application areas of computation.",
        "preReq": "Grade of C- or better in CISC 108 or CISC 106",
        "corReq": "MATH 221, MATH 241, or a higher level math course or math placement.",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 187,
        "name": "Vertically Integrated Projects I",
        "desc": "The Vertically-Integrated Projects (VIP) Program operates in a research and development context. Undergraduate students that join VIP teams earn academic credit for their participation in design/discovery efforts that assist faculty and graduate students with research and development issues in their areas of expertise. ",
        "preReq": "N/A",
        "corReq": "N/A",
        "credits": 1
    },
    {
        "school": "CISC",
        "id": 210,
        "name": "Introduction to Systems Programming",
        "desc": "Principles of computer systems programming for software and hardware platforms to achieve efficient resource usage. Topics include the C programming language, memory management, and awareness of system constraints and interfacing. Projects include programming embedded systems and interactive objects.",
        "preReq": "A grade of C- or better in CISC 106 or CISC 108",
        "corReq": "MATH 221 or MATH 241 or a higher level math course or math placement.",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 220,
        "name": "Data Structures",
        "desc": "Review of data type abstraction, recursion, arrays, stacks, queues, multiple stacks and linked lists. Emphasis on dynamic storage management, garbage collection, trees, graphs, tables, sorting and searching.",
        "preReq": "A minimum grade of C- in CISC 210",
        "corReq": " MATH 210 or MATH 241",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 250,
        "name": "Business Telecommunication Networks",
        "desc": "Examines technologies of information transmission currently utilized in the business environments and the implications of these technologies upon the development and implementation of information systems. Provides a basic background in the convergence of voice, data and video services into common digital networks. Security issues also considered.",
        "preReq": "CISC 181 or MISY 160",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 260,
        "name": "Machine Organization and Assembly Language",
        "desc": "Introduction to the basics of machine organization. Programming tools and techniques at the machine and assembly levels. Assembly language programming and computer arithmetic techniques.",
        "preReq": "A minimum grade of C- in CISC 210",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 275,
        "name": "Introduction to Software Engineering",
        "desc": "Object oriented software design and development through use of an object oriented programming language. Topics include team programming, design patterns, graphical user interfaces, software engineering tools (e.g., integrated development environments, version control, build management, bug tracking, automated testing).",
        "preReq": "Minimum grade of C- in CISC 181 and CISC 220",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 287,
        "name": "Vertically Integrated Projects II",
        "desc": "The Vertically-Integrated Projects (VIP) Program operates in a research and development context. Undergraduate students that join VIP teams earn academic credit for their participation in design/discovery efforts that assist faculty and graduate students with research and development issues in their areas of expertise. ",
        "preReq": "N/A",
        "corReq": "N/A",
        "credits": 1
    },
    {
        "school": "CISC",
        "id": 287,
        "name": "Vertically Integrated Projects II",
        "desc": "The Vertically-Integrated Projects (VIP) Program operates in a research and development context. Undergraduate students that join VIP teams earn academic credit for their participation in design/discovery efforts that assist faculty and graduate students with research and development issues in their areas of expertise. ",
        "preReq": "N/A",
        "corReq": "N/A",
        "credits": 2
    },
    {
        "school": "CISC",
        "id": 303,
        "name": "Automata Theory",
        "desc": "Automata and formal language theory. Background for advanced applications in compilers, computer networks, operating systems, and natural language processing. Finite automata and regular languages. Push down automata and context free grammars. Turing machines.",
        "preReq": "A minimum grade of C- in both MATH 210 and CISC 220",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 304,
        "name": "Logic for Programming",
        "desc": "Propositional and predicate logic for general reasoning and advanced applications in knowledge representation in artificial intelligence and database, program correctness and programming semantics. Models, resolution, logic programming, and natural deduction.",
        "preReq": "CISC 220, MATH 210 (with minimum C- grade in both).",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 320,
        "name": "Introduction to Algorithms",
        "desc": "Design and analysis of algorithms: worst/average case analysis, proofs for correctness and performance of algorithms. Algorithmic strategies (divide and conquer, greedy methods, dynamic programming, etc.). Algorithms for searching, forming and traversal of strings, trees and graphs. Categorization of computational problems: classes P and NP. NP completeness.",
        "preReq": " MATH 210 and a minimum grade of C- in CISC 220",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 355,
        "name": "Computers, Ethics and Society",
        "desc": "Explains relationships among information technology, society and ethics by examining issues raised by increasingly widespread use of computers. Topics include ethics for computer professionals, computer impact on factory work, office work, personal privacy and social power distribution.",
        "preReq": "N/A",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 356,
        "name": "Intellectual Property in the Digital Age",
        "desc": "Explore economic, philosophical, social, and technical approaches to intellectual property (1500 BCE to present) then will research contemporary IP issues in software, entertainment, the Internet, and biotechnology.",
        "preReq": "N/A",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 357,
        "name": "Engaging Youth in Computing",
        "desc": "Develop communication, leadership, and teaching skills while working with youth to broaden participation in computing. With training, student teams assist in after-school programs and K-12 classes to engage youth in computational thinking. Focus on low-entry technologies for creating interactive stories, games, websites, and robotics projects.",
        "preReq": "CISC 101 or CISC 103 or CISC 106 or CISC 108",
        "corReq": "N/A",
        "credits": 1
    },
    {
        "school": "CISC",
        "id": 357,
        "name": "Engaging Youth in Computing",
        "desc": "Develop communication, leadership, and teaching skills while working with youth to broaden participation in computing. With training, student teams assist in after-school programs and K-12 classes to engage youth in computational thinking. Focus on low-entry technologies for creating interactive stories, games, websites, and robotics projects.",
        "preReq": "CISC 101 or CISC 103 or CISC 106 or CISC 108",
        "corReq": "N/A",
        "credits": 2
    },
    {
        "school": "CISC",
        "id": 357,
        "name": "Engaging Youth in Computing",
        "desc": "Develop communication, leadership, and teaching skills while working with youth to broaden participation in computing. With training, student teams assist in after-school programs and K-12 classes to engage youth in computational thinking. Focus on low-entry technologies for creating interactive stories, games, websites, and robotics projects.",
        "preReq": "CISC 101 or CISC 103 or CISC 106 or CISC 108",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 360,
        "name": "Computer Architecture",
        "desc": "Principles and techniques used in the architecture of digital computers. Machine elements and their interrelation. Instruction sets, risc vs cisc, registers, busses and switches.",
        "preReq": "A minimum grade of C- in CISC 220 and CISC 260 (or equivalent courses).",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 361,
        "name": "Operating Systems",
        "desc": "Principles and techniques employed in the development of operating systems and their control programs. Includes management of memory, processors, I/O devices.",
        "preReq": "A minimum grade of C- in both CISC 220 and CISC 260. CPEG 222 may be substituted for CISC 260",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 372,
        "name": "Parallel Computing",
        "desc": "Introduction to parallel computing concepts, methodologies, and tools. Programming and algorithmic techniques for code that will run simultaneously on parallel computing architectures. Topics include: single and multi-core parallelism, shared and distributed memory architectures, concurrency, program decomposition, data distribution, communication, load balancing, scalability, locality, granularity, debugging, performance evaluation.",
        "preReq": "C- or better in both CISC 220 and CISC 260",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 374,
        "name": "Educational Game Development",
        "desc": "Experience the software engineering process through creating educational games for youth; open-ended, project-oriented team learning while assisting regional teachers in integrating computing and computational thinking into the classroom; interact with teachers as clients, hone communication skills and experience design-studio-based critiques of your ideas.",
        "preReq": "CISC 220.",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 387,
        "name": "Vertically Integrated Projects III",
        "desc": "The Vertically-Integrated Projects (VIP) Program operates in a research and development context. Undergraduate students that join VIP teams earn academic credit for their participation in design/discovery efforts that assist faculty and graduate students with research and development issues in their areas of expertise.",
        "preReq": "N/A",
        "corReq": "N/A",
        "credits": 1
    },
    {
        "school": "CISC",
        "id": 387,
        "name": "Vertically Integrated Projects III",
        "desc": "The Vertically-Integrated Projects (VIP) Program operates in a research and development context. Undergraduate students that join VIP teams earn academic credit for their participation in design/discovery efforts that assist faculty and graduate students with research and development issues in their areas of expertise.",
        "preReq": "N/A",
        "corReq": "N/A",
        "credits": 2
    },
    {
        "school": "CISC",
        "id": 387,
        "name": "Vertically Integrated Projects III",
        "desc": "The Vertically-Integrated Projects (VIP) Program operates in a research and development context. Undergraduate students that join VIP teams earn academic credit for their participation in design/discovery efforts that assist faculty and graduate students with research and development issues in their areas of expertise.",
        "preReq": "N/A",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 401,
        "name": "Elements of the Theory of Computation",
        "desc": "General models of computation, formal languages and automata theory and algorithmic unsolvability.",
        "preReq": "CISC 303",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 404,
        "name": "Logic in Computer Science",
        "desc": "Formal introduction to first-order logic with emphasis on its relevance to computer science. Syntax, semantics, models, formal proofs and results on soundness, consistency, completeness, compactness and undecidability. Automated theorem proving also covered.",
        "preReq": "CISC 304",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 410,
        "name": "Computational Mathematics I",
        "desc": "Floating point numbers; conditioning and stability; LU, Cholesky, and QR factorizations; square and overdetermined linear systems; Newton and quasi- Newton rootfinding methods; piecewise polynomials for interpolation, integration, and finite differences; explicit methods for initial-value problems.",
        "preReq": "MATH 305 or MATH 351 or MATH 349",
        "corReq": "N/A",
        "credits": 3
    },
    {
        "school": "CISC",
        "id": 411,
        "name": "Computational Mathematics II",
        "desc": "Eigenvalue and singular-value decompositions; power and Krylov subspace iterations; global interpolation and quadrature; methods for boundary-value problems and Poisson’s equation; implicit solvers for stiff problems; method of lines for partial differential equations; diffusion and advection problems.",
        "preReq": "MATH 426or CISC 410 or MATH 353",
        "corReq": "N/A",
        "credits": 3
    }

    
]